
Перем юТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	ВсеТесты.Добавить("ТестДолжен_СоздатьОбъектРегулярноеВыражение");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьМетодСоответствует");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьМетодСоответствия");
	
	Возврат ВсеТесты;
КонецФункции

Процедура ТестДолжен_СоздатьОбъектРегулярноеВыражение() Экспорт
	РегулярноеВыражение = Новый РегулярноеВыражение("a");

	юТест.ПроверитьРавенство(Строка(Тип(РегулярноеВыражение)), "РегулярноеВыражение", "Тип(""РегулярноеВыражение"") = ""РегулярноеВыражение""");
КонецПроцедуры

Процедура ТестДолжен_ПроверитьМетодСоответствует() Экспорт
	РегулярноеВыражение = Новый РегулярноеВыражение("a");
	Совпало = РегулярноеВыражение.Соответствует("a");
	юТест.Проверить(Совпало, "Совпало");

	РегулярноеВыражение = Новый РегулярноеВыражение("\d\d");
	Совпало = РегулярноеВыражение.Соответствует("15");
	юТест.Проверить(Совпало, "Совпало 15");

	Совпало = РегулярноеВыражение.Соответствует("q");
	юТест.ПроверитьЛожь(Совпало, "Не Совпало q");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьМетодСоответствия() Экспорт
	Строка = "s15";
	РегулярноеВыражение = Новый РегулярноеВыражение("\d\d");
	Совпадения = РегулярноеВыражение.НайтиСовпадения(Строка);
	юТест.ПроверитьРавенство(1, Совпадения.Количество(), "Совпадения.Количество()");

	Совпадение0 = Совпадения[0];
	юТест.ПроверитьРавенство("15", Совпадение0.Значение, "Совпадение.Значение");
	юТест.ПроверитьРавенство(2, Совпадение0.Длина, "Совпадение.Длина");
	юТест.ПроверитьРавенство(1, Совпадение0.Индекс, "Совпадение.Индекс");
	
КонецПроцедуры
