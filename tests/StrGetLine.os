Перем юТест;

Функция ПолучитьТекстИзФайла(ИмяФайла) Экспорт
	ТекПуть = Новый Файл(ТекущийСценарий().Источник).Путь;
	ПутьКФайлу = ТекПуть + ИмяФайла;
	ФайлОбмена = Новый Файл(ПутьКФайлу);
	Данные = "";
	Если ФайлОбмена.Существует() Тогда
		Текст = Новый ЧтениеТекста(ПутьКФайлу, КодировкаТекста.ANSI);
		Данные = Текст.Прочитать();
		Текст.Закрыть();
		ОсвободитьОбъект(Текст);
	КонецЕсли;
	возврат Данные;
КонецФункции

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	ВсеТесты.Добавить("ТестДолжен_ВернутьСтроку1");
	ВсеТесты.Добавить("ТестДолжен_ВернутьСтроку2");
	ВсеТесты.Добавить("ТестДолжен_ВернутьСтроку5");
	ВсеТесты.Добавить("ТестДолжен_ВывестиДанные");
	
	Возврат ВсеТесты;
КонецФункции

Процедура ТестДолжен_ВернутьСтроку1() Экспорт

	Данные = ПолучитьТекстИзФайла("module.txt");
	Стр = СтрПолучитьСтроку(Данные, 1);

	юТест.ПроверитьРавенство("", Стр);
КонецПроцедуры

Процедура ТестДолжен_ВернутьСтроку2() Экспорт

	Данные = ПолучитьТекстИзФайла("module.txt");
	Стр = СтрПолучитьСтроку(Данные, 2);

	юТест.ПроверитьРавенство("// Функция ищет резюме кандидата", Стр);
КонецПроцедуры

Процедура ТестДолжен_ВернутьСтроку5() Экспорт

	Данные = ПолучитьТекстИзФайла("module.txt");
	Стр = СтрПолучитьСтроку(Данные, 5);

	юТест.ПроверитьРавенство("Функция НайтиРезюмеКандидата(ЗаявкаКандидата, ТиповаяАнкета = Неопределено) Экспорт", Стр);
КонецПроцедуры

Процедура ТестДолжен_ВывестиДанные() Экспорт

	Данные = ПолучитьТекстИзФайла("module.txt");

	КолСтрок = СтрЧислоСтрок(Данные)-1;

	Сообщить("Количество строк: " + КолСтрок);
	Для А = 0 По КолСтрок Цикл
		Стр = СокрЛП(СтрПолучитьСтроку(Данные, А));
		Сообщить("" + А + ":" + Стр);
	КонецЦикла;

КонецПроцедуры