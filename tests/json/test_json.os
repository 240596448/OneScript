#Использовать asserts

Перем юТест;
Перем ТекстПроверки;

Процедура Инициализация()

КонецПроцедуры

Функция ПолучитьСписокТестов(Тестирование) Экспорт

	юТест = Тестирование;

	СписокТестов = Новый Массив;
	
	СписокТестов.Добавить("Тест_Должен_СверитьХешСуммуРезультатаПарсингаJSON");
	СписокТестов.Добавить("Тест_Должен_СверитьХешСуммуРезультатаПарсингаJSONПриИспользованииФункцииПропуска");
	СписокТестов.Добавить("Тест_Должен_ПроверитьПолучениеВсехЭлементовПеречисленияТипЗначенияJSON");
	Возврат СписокТестов;

КонецФункции

Процедура Тест_Должен_ПроверитьПолучениеВсехЭлементовПеречисленияТипЗначенияJSON() Экспорт

юТест.ПроверитьРавенство("Null", Строка(ТипЗначенияJSON.Null));
юТест.ПроверитьРавенство("Комментарий", Строка(ТипЗначенияJSON.Комментарий));
юТест.ПроверитьРавенство("ИмяСвойства", Строка(ТипЗначенияJSON.ИмяСвойства));
юТест.ПроверитьРавенство("КонецМассива", Строка(ТипЗначенияJSON.КонецМассива));
юТест.ПроверитьРавенство("КонецОбъекта", Строка(ТипЗначенияJSON.КонецОбъекта));
юТест.ПроверитьРавенство("НачалоМассива", Строка(ТипЗначенияJSON.НачалоМассива));
юТест.ПроверитьРавенство("НачалоОбъекта", Строка(ТипЗначенияJSON.НачалоОбъекта));
юТест.ПроверитьРавенство("Ничего", Строка(ТипЗначенияJSON.Ничего));
юТест.ПроверитьРавенство("Строка", Строка(ТипЗначенияJSON.Строка));
юТест.ПроверитьРавенство("Число", Строка(ТипЗначенияJSON.Число));

КонецПроцедуры

Процедура Тест_Должен_СверитьХешСуммуРезультатаПарсингаJSON() Экспорт
	
	Чтение = Новый ЧтениеJSON;
	Чтение.ОткрытьФайл("test.json", КодировкаТекста.UTF8);
	
		Результат = Новый Структура;
				
	Пока Чтение.Прочитать() Цикл
		Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.ИмяСвойства Тогда
			ИмяСвойства = Чтение.ТекущееЗначение; 
			Чтение.Прочитать();
			
			Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.НачалоОбъекта Тогда
				ВложеннаяСтруктура = Новый Структура;
				Пока Чтение.Прочитать() Цикл
					Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.КонецОбъекта Тогда
						Прервать;
					КонецЕсли;
					Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.ИмяСвойства Тогда
						ИмяВложенногоСвойства = Чтение.ТекущееЗначение; 
						Чтение.Прочитать();
						
						Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.Число Тогда
							ВложеннаяСтруктура.Вставить(ИмяВложенногоСвойства, Формат(Чтение.ТекущееЗначение, "ЧГ=")); 
						Иначе
							ВложеннаяСтруктура.Вставить(ИмяВложенногоСвойства, Чтение.ТекущееЗначение); 		
						КонецЕсли;				
						
					КонецЕсли;		 
				КонецЦикла; 
				Результат.Вставить(ИмяСвойства, ВложеннаяСтруктура);
				
			ИначеЕсли Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.НачалоМассива Тогда
				ВложенныйМассив = Новый Массив;
				Пока Чтение.Прочитать() Цикл
					Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.КонецМассива Тогда
						Прервать;
					КонецЕсли;					
					Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.Число Тогда
						ВложенныйМассив.Добавить(Формат(Чтение.ТекущееЗначение, "ЧГ=")); 	
					Иначе
						ВложенныйМассив.Добавить(Чтение.ТекущееЗначение); 		
					КонецЕсли;				
					
				КонецЦикла; 
				Результат.Вставить(ИмяСвойства, ВложенныйМассив);
			Иначе
				Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.Число Тогда
					Результат.Вставить(ИмяСвойства, Формат(Чтение.ТекущееЗначение, "ЧГ=")); 	
				Иначе
					Результат.Вставить(ИмяСвойства, Чтение.ТекущееЗначение); 		
				КонецЕсли;				
			КонецЕсли;		
		КонецЕсли;
		
	КонецЦикла; 
	
	Текст = "";
	
	Для Каждого ТекСтрока Из Результат Цикл
		Если ТипЗнч(ТекСтрока.Значение) = Тип("Структура") Тогда
			Текст = Текст + "Структура - " + ТекСтрока.Ключ  + ":" + Символы.ПС;
			Для Каждого Элемент Из ТекСТрока.Значение Цикл
				Текст = Текст + Элемент.Ключ  + ":" + Элемент.Значение + Символы.ПС;
			КонецЦикла; 
		ИначеЕсли ТипЗнч(ТекСтрока.Значение) = Тип("Массив") Тогда
			Текст = Текст + "Массив - " + ТекСтрока.Ключ  + ":" + Символы.ПС;
			Для Каждого Элемент Из ТекСТрока.Значение Цикл
				Текст = Текст + Элемент + Символы.ПС;
			КонецЦикла; 
		Иначе
		 Текст = Текст + ТекСтрока.Ключ + ":" + ТекСтрока.Значение + Символы.ПС;
		 КонецЕсли;
	 КонецЦикла; 
	 
	Хеширование = Новый ХешированиеДанных(ХешФункция.CRC32);
	Хеширование.Добавить(Текст);
	
	юТест.ПроверитьРавенство(Хеширование.ХешСумма, 2307602368);
КонецПроцедуры


Процедура Тест_Должен_СверитьХешСуммуРезультатаПарсингаJSONПриИспользованииФункцииПропуска() Экспорт
	
	джейсон = "{
	|""firstName"": ""Иван"",
	|""lastName"": ""Иванов"",
	|""address"": {
	|    ""streetAddress"": ""Московское ш., 101, кв.101"",
	|    ""city"": ""Ленинград"",
	|	   ""postalCode"": 101101
	|},
	|""phoneNumbers"": [
	|    ""812 123-1234"",
	|    ""916 123-4567""
	|]
	|}";
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Джейсон);
	
	Результат = Новый Структура;
		
	Пока Чтение.Прочитать() Цикл
		Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.ИмяСвойства Тогда
			ИмяСвойства = Чтение.ТекущееЗначение; 
			Чтение.Прочитать();
			
			Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.НачалоОбъекта Тогда
				ВложеннаяСтруктура = Новый Структура;
				Пока Чтение.Прочитать() Цикл
					Чтение.Пропустить();
					Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.КонецОбъекта Тогда
						Прервать;
					КонецЕсли;
					Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.ИмяСвойства Тогда
						ИмяВложенногоСвойства = Чтение.ТекущееЗначение; 
						Чтение.Прочитать();
						
						Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.Число Тогда
							ВложеннаяСтруктура.Вставить(ИмяВложенногоСвойства, Формат(Чтение.ТекущееЗначение, "ЧГ=")); 
						Иначе
							ВложеннаяСтруктура.Вставить(ИмяВложенногоСвойства, Чтение.ТекущееЗначение); 		
						КонецЕсли;				
						
					КонецЕсли;		 
				КонецЦикла; 
				Результат.Вставить(ИмяСвойства, ВложеннаяСтруктура);
				
			ИначеЕсли Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.НачалоМассива Тогда
				Чтение.Пропустить();
				ВложенныйМассив = Новый Массив;
				Пока Чтение.Прочитать() Цикл
					Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.КонецМассива Тогда
						Прервать;
					КонецЕсли;					
					Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.Число Тогда
						ВложенныйМассив.Добавить(Формат(Чтение.ТекущееЗначение, "ЧГ=")); 	
					Иначе
						ВложенныйМассив.Добавить(Чтение.ТекущееЗначение); 		
					КонецЕсли;				
					
				КонецЦикла; 
				Результат.Вставить(ИмяСвойства, ВложенныйМассив);
			Иначе
				Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.Число Тогда
					Результат.Вставить(ИмяСвойства, Формат(Чтение.ТекущееЗначение, "ЧГ=")); 	
				Иначе
					Результат.Вставить(ИмяСвойства, Чтение.ТекущееЗначение); 		
				КонецЕсли;				
			КонецЕсли;		
		КонецЕсли;
		
	КонецЦикла; 
	
	Текст = "";
	
	Для Каждого ТекСтрока Из Результат Цикл
		Если ТипЗнч(ТекСтрока.Значение) = Тип("Структура") Тогда
			Текст = Текст + "Структура - " + ТекСтрока.Ключ  + ":" + Символы.ПС;
			Для Каждого Элемент Из ТекСТрока.Значение Цикл
				Текст = Текст + Элемент.Ключ  + ":" + Элемент.Значение + Символы.ПС;
			КонецЦикла; 
		ИначеЕсли ТипЗнч(ТекСтрока.Значение) = Тип("Массив") Тогда
			Текст = Текст + "Массив - " + ТекСтрока.Ключ  + ":" + Символы.ПС;
			Для Каждого Элемент Из ТекСТрока.Значение Цикл
				Текст = Текст + Элемент + Символы.ПС;
			КонецЦикла; 
		Иначе
		 Текст = Текст + ТекСтрока.Ключ + ":" + ТекСтрока.Значение + Символы.ПС;
		 КонецЕсли;
	 КонецЦикла; 
	 
	Хеширование = Новый ХешированиеДанных(ХешФункция.CRC32);
	Хеширование.Добавить(Текст);
	
	юТест.ПроверитьРавенство(Хеширование.ХешСумма, 577120417);
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////
// Инициализация

Инициализация();