
Перем юТест;

////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоСоздаетсяБуферДвоичныхДанных");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоМожноЗаписатьБайты");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоМожноПрочитатьБайты");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое16");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое16BigEndian");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое32");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое32BigEndian");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое64");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое64BigEndian");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоДоступноЧтениеПоИндексу");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоДоступнаЗаписьПоИндексу");
	
	Возврат ВсеТесты;
	
КонецФункции

Функция ПолучитьБуферСДанными()

	Буфер = Новый БуферДвоичныхДанных(10);
	Для Сч = 0 По 9 Цикл
		Буфер[Сч] = Сч+1;
	КонецЦикла;

	Возврат Буфер;
	
КонецФункции

Процедура ТестДолжен_ПроверитьЧтоСоздаетсяБуферДвоичныхДанных() Экспорт
	
	Б = ПолучитьБуферСДанными();
	юТест.ПроверитьРавенство(10, Б.Размер);
	Для Сч = 0 По Б.Размер-1 Цикл
		юТест.ПроверитьРавенство(Сч+1, Б[Сч], "Проверка значения в индексе " + Сч);
	КонецЦикла;
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоМожноЗаписатьБайты() Экспорт
	
	Б = ПолучитьБуферСДанными();
	Чистый = Новый БуферДвоичныхДанных(Б.Размер);
	
	Чистый.Записать(0, Б);
	юТест.ПроверитьРавенство(Б.Размер, Чистый.Размер);
	Для Сч = 0 По Чистый.Размер-1 Цикл
		юТест.ПроверитьРавенство(Б[Сч], Чистый[Сч], "Сверка в индексе " + Сч);
		юТест.ПроверитьРавенство(Сч+1, Чистый[Сч], "Сверка значения в индексе " + Сч);
	КонецЦикла;
	
	Чистый = Новый БуферДвоичныхДанных(5);
	Чистый.Записать(0, Б, 5);
	Для Сч = 0 По Чистый.Размер-1 Цикл
		юТест.ПроверитьРавенство(Б[Сч], Чистый[Сч], "Сверка частичной записи в индексе " + Сч);
	КонецЦикла;
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоМожноПрочитатьБайты() Экспорт
	
	Б = ПолучитьБуферСДанными();
	Прочитанный = Б.Прочитать(2,2);
	
	юТест.ПроверитьРавенство(2, Прочитанный.Размер);
	юТест.ПроверитьРавенство(3, Прочитанный[0]);
	юТест.ПроверитьРавенство(4, Прочитанный[1]);
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое16() Экспорт
	
	юТест.ПодробныеОписанияОшибок(Истина);
	
	Б = Новый БуферДвоичныхДанных(4);
	Б.ЗаписатьЦелое16(0, 255);
	юТест.ПроверитьРавенство(255, Б.ПрочитатьЦелое16(0));
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое16BigEndian() Экспорт
	
	Б = Новый БуферДвоичныхДанных(4);
	Б.ЗаписатьЦелое16(0, 255);
	юТест.ПроверитьРавенство(65280, Б.ПрочитатьЦелое16(0, ПорядокБайтов.BigEndian));
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое32() Экспорт
	
	юТест.ПодробныеОписанияОшибок(Истина);
	
	Б = Новый БуферДвоичныхДанных(4);
	Б.ЗаписатьЦелое32(0, 255);
	юТест.ПроверитьРавенство(255, Б.ПрочитатьЦелое32(0));
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое32BigEndian() Экспорт
	
	Б = Новый БуферДвоичныхДанных(4);
	Б.ЗаписатьЦелое32(0, 255);
	юТест.ПроверитьРавенство(4278190080, Б.ПрочитатьЦелое32(0, ПорядокБайтов.BigEndian));
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое64() Экспорт
	
	юТест.ПодробныеОписанияОшибок(Истина);
	
	Б = Новый БуферДвоичныхДанных(8);
	Б.ЗаписатьЦелое32(0, 255);
	юТест.ПроверитьРавенство(255, Б.ПрочитатьЦелое32(0));
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоМожноЗаписатьПрочитатьЦелое64BigEndian() Экспорт
	
	Б = Новый БуферДвоичныхДанных(8);
	Б.ЗаписатьЦелое64(0, 255);
	юТест.ПроверитьРавенство(18374686479671623680, Б.ПрочитатьЦелое64(0, ПорядокБайтов.BigEndian));
	
КонецПроцедуры
